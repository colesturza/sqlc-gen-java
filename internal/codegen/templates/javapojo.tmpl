// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc {{.SqlcVersion}}
//   sqlc-gen-java {{.SqlcGenJavaVersion}}

package {{.Package}};

{{ if .Struct.Comment}}{{comment .Struct.Comment}}{{end}}
public class {{.Name}} {

    {{range .Struct.Fields}}
    {{- if .Comment}}
    {{comment .Comment}}
    {{- end}}
    private{{if $.EmitBuilder}} final{{end}} {{if .Type.IsNull}}{{.Type.Name}}{{else}}{{.Type}}{{end}} {{.Name}};
    {{- end}}

    {{if .EmitBuilder}}
    {{.Struct.Name}}(
    {{- range $i, $e := .Struct.Fields}}
    {{- if $i }}, {{end -}}
    final {{.Type}} {{.Name}}
    {{- end}}) {
        {{- range .Struct.Fields}}
        this.{{.Name}} = {{.Name}};
        {{- end}}
    }
    {{else}}
    public {{.Struct.Name}}() {}
    {{end}}

    {{range .Struct.Fields}}

    public {{if .Type.IsNull}}{{.Type.Name}}{{else}}{{.Type}}{{end}} get{{title .Name}}() {
        return {{if .Type.IsNull}}java.util.Optional.ofNullable(this.{{.Name}}){{else}}this.{{.Name}}{{end}};
    }
    {{- end}}

    {{ if not .EmitBuilder}}
    {{range .Struct.Fields}}

    public void set{{title .Name}}(final {{if .Type.IsNull}}{{.Type.Name}}{{else}}{{.Type}}{{end}} {{.Name}}) {
        this.{{.Name}} = {{.Name}};
    }
    {{- end}}
    {{end}}

    {{- if .EmitBuilder}}
    public static Builder{{.Struct.Name}} builder() {
        return new Builder{{.Struct.Name}}();
    }

    public static class Builder{{.Struct.Name}} {

        {{range .Struct.Fields}}
        {{- if .Comment}}
        {{comment .Comment}}
        {{- end}}
        private {{.Type}} {{.Name}};
        {{- end}}

        Builder{{.Struct.Name}}() {}

        {{range .Struct.Fields}}

        {{if .Type.IsArray}}
        public Builder{{$.Struct.Name}} {{singular .Name}}(final {{.Type.Name}} {{singular .Name}}) {
            if (this.{{.Name}} == null) {
                this.{{.Name}} = new java.util.ArrayList<{{.Type.Name}}>();
            }
            this.{{.Name}}.add({{singular .Name}});
            return this;
        }

        public Builder{{$.Struct.Name}} {{.Name}}(final java.util.Collection<? extends {{.Type.Name}}> {{.Name}}) {
            if (this.{{.Name}} == null) {
                this.{{.Name}} = new java.util.ArrayList<{{.Type.Name}}>();
            }
            this.{{.Name}}.addAll({{.Name}});
            return this;
        }

        public Builder{{$.Struct.Name}} clear{{title .Name}}() {
            if (this.{{.Name}} != null) {
                this.{{.Name}}.clear();
            }
            return this;
        }
        {{else}}
        public Builder{{$.Struct.Name}} {{.Name}}(final {{.Type}} {{.Name}}) {
            this.{{.Name}} = {{.Name}};
            return this;
        }
        {{end}}
        {{- end}}

        public {{.Struct.Name}} build() {
            return new {{.Struct.Name}}(
            {{- range $i, $e := .Struct.Fields}}
            {{- if $i }}, {{end -}}
            {{.Name}}
            {{- end}});
        }
    }
    {{- end}}
}