// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc {{.SqlcVersion}}
//   sqlc-gen-java {{.SqlcGenJavaVersion}}

package {{.Package}};

public class QueriesImpl implements Queries {
{{range .Queries}}
    public static final String {{.ConstantName}} = """
            -- name: {{.MethodName}} {{.Cmd}}{{.SQL | nindent 12}}
            """;
{{end}}

    protected final javax.sql.DataSource ds;

    public QueriesImpl(final javax.sql.DataSource ds) {
        this.ds = ds;
    }

{{- range .Queries}}
{{- if eq .Cmd ":one"}}

    {{range .Comments}}{{comment .}}
    {{end -}}
    @Overrides
    public {{.Ret.Type}} {{.MethodName}}({{.Arg.Pair}}) {
        {{.Ret.Type}} {{.Ret.Name}} = null;
        try (final java.sql.Connection conn = ds.getConnection(); 
             final java.sql.PreparedStatement ps = conn.prepareStatement({{.ConstantName}})) { {{.Arg.Bindings | nindent 12}}
            try (java.sql.ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    {{.Ret.Name}} = {{.Ret.ResultSet}};
                }
            }
        } catch (java.sql.SQLException e) {
            throw new RuntimeException(e);
        }
        return {{.Ret.Name}};
    }
{{- end}}
{{- if eq .Cmd ":many"}}

    {{range .Comments}}{{comment .}}
    {{end -}}
    @Overrides
    public java.util.List<{{.Ret.Type}}> {{.MethodName}}({{.Arg.Pair}}) {
        java.util.List<{{.Ret.Type}}> {{.Ret.Name}} = new java.util.ArrayList<>();
        try (final java.sql.Connection conn = ds.getConnection(); 
             final java.sql.PreparedStatement ps = conn.prepareStatement({{.ConstantName}})) { {{.Arg.Bindings | nindent 12}}
            try (java.sql.ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    {{.Ret.Name}}.add({{.Ret.ResultSet}});
                }
            }
        } catch (java.sql.SQLException e) {
            throw new RuntimeException(e);
        }
        return {{.Ret.Name}};
    }
{{- end}}
{{- if eq .Cmd ":exec"}}

    {{range .Comments}}{{comment .}}
    {{end -}}
    @Overrides
    public void {{.MethodName}}({{.Arg.Pair}}) {
        try (final java.sql.Connection conn = ds.getConnection(); 
             final java.sql.PreparedStatement ps = conn.prepareStatement({{.ConstantName}})) { {{.Arg.Bindings | nindent 12}}
            ps.execute();
        } catch (java.sql.SQLException e) {
            throw new RuntimeException(e);
        }
    }
{{- end}}
{{- if eq .Cmd ":execrows"}}

    {{range .Comments}}{{comment .}}
    {{end -}}
    @Overrides
    public long {{.MethodName}}({{.Arg.Pair}}) {
        try (final java.sql.Connection conn = ds.getConnection(); 
             final java.sql.PreparedStatement ps = conn.prepareStatement({{.ConstantName}})) { {{.Arg.Bindings | nindent 12}}
            ps.execute();
            return ps.getLargeUpdateCount();
        } catch (java.sql.SQLException e) {
            throw new RuntimeException(e);
        }
    }
{{- end}}
{{- if eq .Cmd ":execlastid"}}

    {{range .Comments}}{{comment .}}
    {{end -}}
    @Overrides
    public long {{.MethodName}}({{.Arg.Pair}}) {
        throw new UnsupportedOperationException();
    }
{{- end}}
{{- if eq .Cmd ":execresult"}}

    {{range .Comments}}{{comment .}}
    {{end -}}
    @Overrides
    public long {{.MethodName}}({{.Arg.Pair}}) {
        throw new UnsupportedOperationException();
    }
{{- end}}
{{- end}}
}